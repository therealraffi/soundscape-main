#ac
import torch
import torchvision
import torch.nn as nn
import numpy as np
import json
import utils
import validate #Directory
import argparse
import models.densenet
import models.resnet
import models.inception #Directory
import time
import dataloaders.datasetaug #Directory
import dataloaders.datasetnormal
import torchaudio
import librosa
from tqdm import tqdm
from tensorboardX import SummaryWriter
from PIL import Image
import firebase_admin
from firebase_admin import credentials
from firebase_admin import db
import socket
import threading
from threading import Lock
import pyaudio
import wave
import struct

#esclass (resnet)
import pandas as pd
import librosa.display
import torch.nn.functional as F
import torch.optim as optim
from torch.utils.data import Dataset, DataLoader
import os
from torchvision.models import resnet34
import pickle

#urban
from prepare_data.urbansound8k import UrbanSound8K_TALNet
from prepare_data.esc50 import ESC50_TALNet
from prepare_data.sonycust import SONYCUST_TALNet #Directory
from models.TALNet import TALNetV3NoMeta
from losses.DCASEmaskedLoss import *
import config #Directory
from models.panns import Cnn10, Mixup, do_mixup #Directory

from model_TALNetV3_training import TALNetV3Classifier #Files
from model_CNN10TL_training import CNN10Classifier #Files

from torch.nn import BCELoss
from torch.optim import Adam
from optimizer.lookahead import Lookahead
from optimizer.ralamb import Ralamb

from pytorch_lightning.core.lightning import LightningModule
from pytorch_lightning import Trainer, seed_everything, loggers
from pytorch_lightning.callbacks import EarlyStopping, ModelCheckpoint
from pytorch_lightning import loggers as pl_loggers

from albumentations import Compose, ShiftScaleRotate, GridDistortion, Cutout

from utils.metrics import accuracy, compute_macro_auprc, compute_micro_auprc, compute_micro_F1, mean_average_precision